services:
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3000:3000"
        environment:
            GF_INSTALL_PLUGINS: yesoreyeram-infinity-datasource
        volumes:
            - ./deploy/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
            - ./deploy/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
            - ./deploy/grafana/grafana.ini:/etc/grafana/grafana.ini:ro

    nginx:
        image: nginx:1.23.3
        container_name: nginx
        ports:
            - "80:80"
        volumes:
            - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80/ping/" ]
            interval: 4s

    code:
        restart: on-failure
        build: .
        env_file:
            - "./deploy/.env.example"

    api:
        container_name: api
        command: [ "crudik", "run", "api" ]
        expose:
            - 5000
        extends:
            service: code
        volumes:
            - "./src/crudik/adapters/db/alembic/migrations/versions/:/home/app/src/crudik/adapters/db/alembic/migrations/versions/"
    
    telegram_bot:
        command: python src/crudik/bootstrap/entrypoint/telegram_bot.py
        extends:
            service: code

    redis:
        container_name: redis_service
        image: redis:7.0
        ports:
            - "6379:6379"
        command: [ "redis-server", "--appendonly", "yes" ]
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 2s

    db:
        container_name: persistence
        image: postgres:14.1-alpine
        env_file:
            - ./deploy/.env.pg
        ports:
            - 5432:5432
        volumes:
          - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 2s

    minio:
        image: minio/minio:latest
        container_name: minio
        ports:
            - "9000:9000"
            - "9001:9001"
        env_file:
            - ./deploy/.env.minio
        command: server /data --console-address ":9001"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 2s

    nginx-s3-gateway:
        image: ghcr.io/nginxinc/nginx-s3-gateway/nginx-oss-s3-gateway:latest-njs-oss-20220310
        container_name: nginx-s3-gateway
        env_file:
            - ./deploy/.env.minio
        ports:
            - "9331:80"
